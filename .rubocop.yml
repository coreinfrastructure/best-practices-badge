# Rubocop configuration
#
# Note: Rubocop continuously adds new cops. Sometimes applying them
# is safely automated, but sometimes they aren't (or the safe automation
# is only available in a later version of Rubocop).
# Here are some options:
# 1. Always implement new cops, even if they require lots of manual work.
#    Trying to do this is extremely time-consuming and risky, because
#    we already have a code base, and it's often not worth it.
# 2. Freeze on one (old) version. But then we never get the improvements
#    such as better cops and bug fixes.
# 3. Update rubocop, use some of its automated fixes, fix some
#    easy/important ones (especially if they are bugs or security weaknesses),
#    and then disable the rest of the cops (e.g., Enable: false).
#    We can then slowly later try to re-enable some of the newer cops.
# We choose option 3. Later versions of rubocop may add automations,
# so this can save time in both the short and long run.
#
# Rubocop has changed over time:
# * the performance cops were extracted in rubocop-performance
#   and were removed from the main gem in 0.68
# * the Ruby on Rails cops were extracted in rubocop-rails and
#   were removed from the main gem in 0.72
#   Be *sure* to depend on rubocop-rails version *2.0* or later.
# See:
# https://docs.rubocop.org/rubocop/installation.html
# https://metaredux.com/posts/2019/05/22/a-modular-rubocop.html
# https://github.com/toshimaru/rubocop-rails/issues/31

require:
  - rubocop-performance
  - rubocop-rails

AllCops:
  EnabledByDefault: true
  TargetRubyVersion: 2.5
  DisplayCopNames: true
  DisplayStyleGuide: true
  Include:
    - '**/*.rb'
    - '**/*.pryrc'
    - '**/*.rake'
    - '.env'
    - '.simplecov'
    - '**/config.ru'
    - '**/Gemfile'
    - '**/Guardfile'
    - '**/Rakefile'
  Exclude:
    - 'tmp/**/*'
    - 'lib/.git/**/*'
    - 'db/**/*'
    - 'db/migrate/**'
    - 'bin/**/*'
    - 'node_modules/**/*'
    - 'railroader/**/*'
    - '.pryrc'
    - 'license_okay'

# This will ALWAYS be disabled. We *want* to be able disable cops.
Style/DisableCopsWithinSourceCodeDirective:
  Enabled: false
# This is a terrible idea and will never happen. Sometimes there's
# no need for a full Rails environment; we only want to bring in a
# Rails environment when it's encessary.
Rails/RakeEnvironment:
  Enabled: false

Style/Documentation:
  Enabled: false
Lint/SuppressedException:
  Enabled: false
# Exclude:
#   - 'bin/*'
Style/RescueStandardError:
  Exclude:
    # When getting evidence from external sources there are
    # many possible problems, and we don't care - if there's
    # an error getting evidence, we treat it as no evidence.
    - 'app/lib/evidence.rb'
Metrics/AbcSize:
  Max: 20
  Exclude:
    - 'db/migrate/*'
Metrics/ClassLength:
  Exclude:
    - 'db/migrate/*'
# Weird failures on this, disabled for now.
Layout/LineLength:
   Max: 132
  # Exclude:
  #   - 'db/migrate/*'
Metrics/MethodLength:
 Exclude:
   - 'db/migrate/*'
 Max: 12
Rails/SkipsModelValidations:
  Exclude:
    - 'test/**/*.rb'
Style/Copyright:
  Enabled: false
Style/InlineComment:
  Enabled: false
Style/DocumentationMethod:
  Enabled: false
Style/MethodCallWithArgsParentheses:
  Enabled: false
Style/MissingElse:
  Enabled: false
Style/NegatedIf:
  Enabled: true
  EnforcedStyle: postfix
Style/Send:
  Exclude:
    - 'test/**/*.rb'
#
# Historical systems could only reliably handle comments if they were ASCII.
# But UTF-8 has essentially "taken over", so there's no reason to limit
# ourselves to ASCII. Having ASCII-only comments makes it unnecessarily
# difficult to discuss/describe locale issues.  *Code* handles UTF-8
# without incident, so there's no reason to limit comments to ASCII.
#
Style/AsciiComments:
  Enabled: false
#
# The following are newer cops which have disabled because
# we aren't ready for them right now. It's diffult to do things "all at once".
# Instead, we'll get things running first (ignoring these cops), and
# later try to slowly comply with them or reject them.
# See issue #1069, which tracks this decision.
#
Style/StringHashKeys:
  Enabled: false
Naming/ConstantName:
  Enabled: false
Style/MixinUsage:
  Enabled: false
Rails/EnvironmentComparison:
  Enabled: false
Lint/MissingCopEnableDirective:
  Enabled: false
Lint/NumberConversion:
  Enabled: false
Layout/ClassStructure:
  Enabled: false
Rails/Presence:
  Enabled: false
Naming/MethodParameterName:
  Enabled: false
Style/IpAddresses:
  Enabled: false
# Rubocop 0.59.0 doesn't notice same-line comments (whup!), so disable
Bundler/GemComment:
  Enabled: false
# Re-enable and try these out later
Performance/ChainArrayAllocation:
  Enabled: false
Layout/HashAlignment:
  Enabled: false
Rails/SaveBang:
  Enabled: false
Rails/FindEach:
  Enabled: false
Lint/RedundantCopDisableDirective:
  Enabled: false
Layout/MultilineArrayLineBreaks:
  Enabled: false
Layout/MultilineHashKeyLineBreaks:
  Enabled: false
Layout/MultilineMethodArgumentLineBreaks:
  Enabled: false
Style/StderrPuts:
  Enabled: false
Rails/HelperInstanceVariable:
  Enabled: false
Style/MultilineWhenThen:
  Enabled: false
Style/ConstantVisibility:
  Enabled: false
Style/RedundantReturn:
  Enabled: false
Rails/FilePath:
  Enabled: false
Rails/UnknownEnv:
  Enabled: false
Performance/IoReadlines:
  Enabled: false
Layout/FirstMethodArgumentLineBreak:
  Enabled: false
Style/IfUnlessModifier:
  Enabled: false
Style/MultilineMethodSignature:
  Enabled: false
Lint/ConstantResolution:
  Enabled: false
Style/RedundantRegexpEscape:
  Enabled: false
Style/CaseLikeIf:
  Enabled: false
Style/ExpandPathArguments:
  Enabled: false
Style/RedundantFetchBlock:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Style/RedundantAssignment:
  Enabled: false
Bundler/OrderedGems:
  Enabled: false
Layout/EmptyLineAfterMultilineCondition:
  Enabled: false
Style/StringConcatenation:
  Enabled: false
Style/ClassMethodsDefinitions:
  Enabled: false
Style/GlobalStdStream:
  Enabled: false
Lint/UselessMethodDefinition:
  Enabled: false
Style/OptionalBooleanParameter:
  Enabled: false
Metrics/PerceivedComplexity:
  Enabled: false
  Max: 10
Style/SoleNestedConditional:
  Enabled: false
Lint/EmptyConditionalBody:
  Enabled: false
Style/ExplicitBlockArgument:
  Enabled: false
Rails/DefaultScope:
  Enabled: false
Rails/WhereNot:
  Enabled: false
Rails/NegateInclude:
  Enabled: false
Layout/RedundantLineBreak:
  Enabled: false
Naming/VariableNumber:
  Enabled: false
Layout/LineContinuationLeadingSpace:
  Enabled: false
Style/TopLevelMethodDefinition:
  Enabled: false
Naming/InclusiveLanguage:
  Enabled: false
Bundler/GemVersion:
  Enabled: false
Lint/EmptyBlock:
  Enabled: false
Lint/OrAssignmentToConstant:
  Enabled: false
Rails/EnvironmentVariableAccess:
  Enabled: false
Rails/DuplicateScope:
  Enabled: false
Rails/I18nLocaleTexts:
  Enabled: false
Rails/RedundantPresenceValidationOnBelongsTo:
  Enabled: false
Style/RequireOrder:
  Enabled: false
Style/YodaExpression:
  Enabled: false
Metrics/BlockLength:
  Max: 36
