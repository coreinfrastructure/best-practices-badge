{
  "id": 1,
  "user_id": 2,
  "name": "BadgeApp",
  "description": "Badge Application for Linux Foundation CII",
  "project_homepage_url": "https://github.com/linuxfoundation/cii-best-practices-badge",
  "repo_url": "https://github.com/linuxfoundation/cii-best-practices-badge",
  "license": "MIT",
  "project_homepage_url_status": "?",
  "project_homepage_url_justification": null,
  "project_homepage_https_status": "?",
  "project_homepage_https_justification": null,
  "description_sufficient_status": "Met",
  "description_sufficient_justification": "https://github.com/linuxfoundation/cii-best-practices-badge",
  "interact_status": "Met",
  "interact_justification": "https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md",
  "contribution_status": "Met",
  "contribution_justification": "https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md",
  "contribution_criteria_status": "Met",
  "contribution_criteria_justification": "https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md",
  "license_location_status": "Met",
  "license_location_justification": "It's in the LICENSE file in the top level directory.  See: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/LICENSE",
  "oss_license_status": "Met",
  "oss_license_justification": "The MIT license is widely acknowledged as being OSS.  The license is at https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/LICENSE",
  "oss_license_osi_status": "Met",
  "oss_license_osi_justification": "",
  "documentation_basics_status": "Met",
  "documentation_basics_justification": "The directory \"doc\" contains most documentaiton. Installation information is at https://github.com/linuxfoundation/cii-best-practices-badge/tree/master/doc/INSTALL.md and other materials are at https://github.com/linuxfoundation/cii-best-practices-badge/tree/master/doc/",
  "documentation_interface_status": "Met",
  "documentation_interface_justification": "Its interface is defined here: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md#interface",
  "repo_url_status": "Met",
  "repo_url_justification": "It uses git, URL is https://github.com/linuxfoundation/cii-best-practices-badge",
  "repo_track_status": "Met",
  "repo_track_justification": "Uses git to track this.",
  "repo_interim_status": "Met",
  "repo_interim_justification": "Interim versions are put on git, not just final versions.",
  "repo_distributed_status": "Met",
  "repo_distributed_justification": "Uses git.",
  "version_unique_status": "Met",
  "version_unique_justification": "The primary single user uses git commit records to identify releases.",
  "version_semver_status": "Unmet",
  "version_semver_justification": "There's really only one expected final user, the Linux Foundation site.  The code is deployed there using git.  Therefore, git commit id's are enough for that purpose.  That said, major changes *are* recorded using Semantic Versioning (SemVer).",
  "version_tags_status": "Unmet",
  "version_tags_justification": "Git commit id's are used, since there's realy only 1 primary user the need for a clearly-discussed version number is less important.",
  "changelog_status": "Met",
  "changelog_justification": "CHANGELOG file is in top directory, see: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CHANGELOG.md",
  "changelog_vulns_status": "Met",
  "changelog_vulns_justification": "We intend to do that, though we have not had any need to do that yet.",
  "report_url_status": "?",
  "report_url_justification": null,
  "report_tracker_status": "Met",
  "report_tracker_justification": "Yes, GitHub issue tracker.",
  "report_process_status": "Met",
  "report_process_justification": "Yes, either GitHub issue tracker or mailing list.  See: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/README.md",
  "report_responses_status": "Met",
  "report_responses_justification": "Yes.  Not many have been submitted so far, but we've responded.",
  "enhancement_responses_status": "Unmet",
  "enhancement_responses_justification": "The project hasn't been around very long, so we haven't had a chance to respond to most enhancement requests.",
  "report_archive_status": "Met",
  "report_archive_justification": "Yes, via GitHub isue tracker: https://github.com/linuxfoundation/cii-best-practices-badge/issues",
  "vulnerability_report_process_status": "Met",
  "vulnerability_report_process_justification": "https://github.com/linuxfoundation/cii-best-practices-badge/issues",
  "vulnerability_report_private_status": "Met",
  "vulnerability_report_private_justification": "https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md",
  "vulnerability_report_response_status": "Met",
  "vulnerability_report_response_justification": "No external reports so far, so this is vacuously true.",
  "build_status": "N/A",
  "build_justification": "The software is written using Ruby and JavaScript, and their implementations run directly on the source code.",
  "build_common_tools_status": "N/A",
  "build_common_tools_justification": "Note that a Gemfile.lock file and Rake tasks are provided to enable others to quickly recreate a development environment.",
  "build_oss_tools_status": "N/A",
  "build_oss_tools_justification": "",
  "test_status": "Met",
  "test_justification": "Yes, it includes a test suite based on minitest (the test framework that comes with Rails).",
  "test_invocation_status": "Met",
  "test_invocation_justification": "Yes. \"rake test\" invokes the automated test suite. The default \"rake\" command includes \"rake test\".",
  "test_most_status": "Met",
  "test_most_justification": "Met.  Currently coverage of the ruby code is over 90%, and most of the code is in Ruby.",
  "test_policy_status": "Met",
  "test_policy_justification": "Yes.  The CONTRIBUTING file at <https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md> says,  \"When adding or changing functionality, please include new tests for them as part of your contribution\". Also, the project home page shows the test coverage, which encourages adding tests as new functionality is added.",
  "tests_are_added_status": "Met",
  "tests_are_added_justification": "Tests are added as new functionality is added.",
  "tests_documented_added_status": "Met",
  "tests_documented_added_justification": "Yes.  The CONTRIBUTING file at <https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md> says,  \"When adding or changing functionality, please include new tests for them as part of your contribution\".",
  "warnings_status": "Met",
  "warnings_justification": "Uses rubocop and rails_best_practices to check for code quality errors in Ruby code.  JSCS is used to look for problems in JavaScript.  The markdown documentation is scanned with markdownlink.",
  "warnings_fixed_status": "Met",
  "warnings_fixed_justification": "In general warnings are addressed.  In some cases warnings are disabled for specific cases.",
  "warnings_strict_status": "Met",
  "warnings_strict_justification": "The settings for the warning tools are generally fairly strict.",
  "know_secure_design_status": "Met",
  "know_secure_design_justification": "David A. Wheeler, lead developer, literally wrote the code on how to design secure software: http://www.dwheeler.com/secure-programs",
  "know_common_errors_status": "Met",
  "know_common_errors_justification": "For a discussino of security requirements, common types of security vulnerabilities, and how this application counters those common kinds of vulnerabilities, see: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/implementation.md#security",
  "crypto_published_status": "Met",
  "crypto_published_justification": "The software uses bcrypt to store salted hashed iterated passwords, and https+standard crypto protocols to communicate wtih users.",
  "crypto_call_status": "Met",
  "crypto_call_justification": "Uses 'bcrypt' gem for bcrypt, and https implementation built into its web server.",
  "crypto_oss_status": "Met",
  "crypto_oss_justification": "",
  "crypto_keylength_status": "N/A",
  "crypto_keylength_justification": "Note: This application uses bcrypt, which uses 128-bit salt and produces 184 bits as a salted encrypted iterated hash.  This is less than 224 bits, but that's not really what the 224 bits of hash are for.  This probably needs clarification in the criteria; see https://github.com/linuxfoundation/cii-best-practices-badge/issues/153",
  "crypto_working_status": "Met",
  "crypto_working_justification": "The only cryptographic algorithm directly used by the program is bcrypt, which is not broken.",
  "crypto_pfs_status": "N/A",
  "crypto_pfs_justification": "Nothing in the code inhibits or prevents the use of PFS; that is a property of the website's web server.",
  "crypto_password_storage_status": "Met",
  "crypto_password_storage_justification": "Bcrypt used for storing local passwords.",
  "crypto_random_status": "Met",
  "crypto_random_justification": "The nonce for the salt is created by the bcrypt gem; its engine.rb file shows that it uses OpenSSL to get cryptographically random data for the salt (on Java it would use SecureRandom, which is still fine, but that is not the default configuration). Other nonces are part of the https implementation, which are implemented by the web server (not this application).",
  "delivery_mitm_status": "Met",
  "delivery_mitm_justification": "Uses https.",
  "delivery_unsigned_status": "Met",
  "delivery_unsigned_justification": "Does not make this mistake.",
  "vulnerabilities_fixed_60_days_status": "Met",
  "vulnerabilities_fixed_60_days_justification": "No such vulnerabilities at this time.",
  "vulnerabilities_critical_fixed_status": "Met",
  "vulnerabilities_critical_fixed_justification": "No such vulnerabilities at this time.",
  "static_analysis_status": "Met",
  "static_analysis_justification": "As noted in <https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md>, Brakeman, Rubocop, and rails_best_practices are used to analyze the Ruby code.  Brakeman is specifically designed to analyze Ruby on Rails code.  The JavaScript code is analyzed with JSCS.",
  "static_analysis_common_vulnerabilities_status": "Met",
  "static_analysis_common_vulnerabilities_justification": "Brakeman specifically looks for common vulnerabilities.",
  "static_analysis_fixed_status": "Met",
  "static_analysis_fixed_justification": "",
  "static_analysis_often_status": "Met",
  "static_analysis_often_justification": "All commits to GitHub are run through CircleCI, which performs a number of static analysis checks (Brakeman, Rubocop, etc.).",
  "dynamic_analysis_status": "Met",
  "dynamic_analysis_justification": "Analyzed with OWASP ZAP by Emily Ratliff",
  "dynamic_analysis_unsafe_status": "N/A",
  "dynamic_analysis_unsafe_justification": "Application written using Ruby and JavaScript, not C/C++",
  "dynamic_analysis_enable_assertions_status": "Unmet",
  "dynamic_analysis_enable_assertions_justification": "",
  "dynamic_analysis_fixed_status": "Met",
  "dynamic_analysis_fixed_justification": "A few minor issues were found by OWASP ZAP during development; these have already been fixed.",
  "general_comments": "",
  "created_at": "2015-10-23T22:02:10.544Z",
  "updated_at": "2015-11-27T14:21:35.145Z",
  "crypto_weaknesses_status": "Met",
  "crypto_weaknesses_justification": "The only cryptography used directly by this application is bcrypt  (used for storing passwords as salted iterated hashes).  At the time of this writing, no serious breaks are known in bcrypt.  The application also dependes on the web server's https configuration, but that is out of scope for this code.",
  "crypto_alternatives_status": "Unmet",
  "crypto_alternatives_justification": "Nothing in the code inhibits or prevents the use of PFS; that is a property of the website's web server.  The program uses bcrypt - and only bcrypt - for hashing passwords.  It does allow for increasing the bcrypt 'cost' parameter, which could counter some attacks if a weakness in bcrypt is found in the future.",
  "test_continuous_integration_status": "Met",
  "test_continuous_integration_justification": "Code is frequently integrated back into GitHub; CircleCI and several other tools are then run on the result to determine if there's a problem.  If a problem is found, the tools provide feedback via GitHub."
}