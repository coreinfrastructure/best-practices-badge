<%= javascript_include_tag 'project-stats', defer: true%>

<%
  # Force deletion of the obsolete cached information, if it exists.
  # It will age out eventually anyway, but this is a large cache entry
  # and we can easily determine what the previous one was. Immediately
  # forcing its deletion provides more cache space for other (useful) things.
  Rails.cache.delete ActiveSupport::Cache.expand_cache_key(
    ['project_stats', locale, @is_normal, ProjectStat.all.size-1]
  )

  # Cache the page, it's somewhat expensive to create.
  cache ['project_stats', locale, @is_normal, ProjectStat.all.size] do
%>

<p id="notice"><%= notice %></p>

<% if @is_normal %>

<h1><%= t('.project_stats_header') %></h1>

<h2><%= t '.all_projects' %></h2>

<%=
  # Show a chart with just total # projects.
  # This gets its own chart because its scale hides everything else.
  # This causes loading the JSON data as a separate request.
  # Doing it this way means that the page we send is smaller, and
  # the JSON data can be easily cached by the CDN.
  line_chart total_projects_project_stats_path(format: :json),
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<br><br><br>

<h2><%= t '.projects_nontrivial' %></h2>
<%=
  # Show project counts, but skip <25% because that makes chart scale unusable
  gt0_stats = ProjectStat::STAT_VALUES.select do |e|
    e.to_i > 0
  end.freeze
  dataset = gt0_stats.map do |minimum|
    desired_field = 'percent_ge_' + minimum.to_s
    series_dataset = ProjectStat.all.reduce({}) do |h,e|
     h.merge(e.created_at => e[desired_field])
    end
    {name: '>=' + minimum.to_s + '%', data: series_dataset}
  end
  # Done transforming data; display it.
  line_chart nontrivial_projects_project_stats_path(format: :json),
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<br><br><br>

<h2><%= t '.projects_activity_30' %></h2>
<%=
  line_chart activity_30_project_stats_path(format: :json),
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<% else # show "non-normal" displays (less commonly used) %>

<h2><%= t '.daily_activity' %></h2>
<%=
  line_chart daily_activity_project_stats_path(format: :json),
    colors: ['green', 'darkgreen', 'blue', 'darkblue', 'red', 'purple'],
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<br>
<%= t '.projects_created_updated_daily' %>

<br><br><br>

<h2><%= t '.reminders' %></h2>
<%=
  line_chart reminders_project_stats_path(format: :json),
    colors: ['green', 'blue'],
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>
<br><br><br>

<h2><%= t '.projects_silver' %></h2>
<%=
  line_chart silver_project_stats_path(format: :json),
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<br><br><br>

<h2><%= t '.projects_gold' %></h2>
<%=
  # Show project counts, but skip <25% because that makes chart scale unusable
  gt25_stats = ProjectStat::STAT_VALUES.select do |e|
    e.to_i > 25
  end.freeze
  dataset = gt25_stats.map do |minimum|
    desired_field = 'percent_2_ge_' + minimum.to_s
    series_dataset = ProjectStat.all.reduce({}) do |h,e|
     h.merge(e.created_at => e[desired_field])
    end
    {name: '>=' + minimum.to_s + '%', data: series_dataset}
  end
  # Done transforming data; display it.
  line_chart dataset,
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<br><br><br>

<h2><%= t '.projects_completed_silver_and_gold' %></h2>
<%=
  dataset = ['1', '2'].map do |level|
    desired_field = "percent_#{level}_ge_100"
    series_dataset = ProjectStat.all.reduce({}) do |h,e|
     h.merge(e.created_at => e[desired_field])
    end
    {name: t("projects.form_early.level.#{level}"), data: series_dataset}
  end
  # Done transforming data; display it.
  line_chart dataset,
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<br><br><br>

<h2><%= t '.percent_projects_earning_badges' %></h2>
<%=
  dataset = [0, 1, 2].map do |level|
    desired_field = "percent#{level > 0 ? '_' + level.to_s : '' }_ge_100"
    series_dataset = ProjectStat.all.reduce({}) do |h,e|
     h.merge(e.created_at =>
       e[desired_field].to_i*100.0/(e['percent_ge_0'].to_i))
    end
    {name: t("projects.form_early.level.#{level}"), data: series_dataset}
  end
  # Done transforming data; display it.
  line_chart dataset,
    library: ProjectStatsHelper::DATE_CHART_OPTIONS, defer: true
%>

<br><br><br>

<h2><%= t '.user_statistics' %></h2>
<%=
  create_line_chart(
    [
      "users",
      "github_users",
      "local_users",
      "users_created_since_yesterday",
      "users_updated_since_yesterday",
      "users_with_projects",
      "users_without_projects",
      "users_with_multiple_projects",
      "users_with_passing_projects",
      "users_with_silver_projects",
      "users_with_gold_projects"
    ]
  )
%>

<%   end # uncommon %>
<% end # cache %>

<% if current_user&.admin? %>
<%# This links to admin-only information: %>
<p>
<%= t '.admin_html' %>
<% end # admin-specific info %>

<br>
<br>
<%= t '.raw_data' %>
<ul>
<li><%= link_to t('.json_format'), project_stats_path(format: :json) %>
<li><%= link_to t('.csv_format'), project_stats_path(format: :csv) %>.
</ul>
