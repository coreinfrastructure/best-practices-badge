# WARNING. THIS FILE WAS AUTO-GENERATED BY THE TRANSLATION GEM.
# IF YOU UPDATE IT, YOUR CHANGES WILL BE LOST AT THE NEXT SYNC.
#
# To update this file, use this translation interface:
# http://translation.io/david-a-wheeler/cii-best-practices-badge/ru
#
---
ru:
  helpers:
    select:
      prompt: 'Выберите: '
    submit:
      create: Создать %{model}
      update: Обновить %{model}
      submit: Сохранить %{model}
  hello:
  submit:
  projects_count:
    one: "%{count} проект"
    other: "%{count} проекта"
    zero: Нет проектов
    few: "%{count} проекта"
    many: "%{count} проектов"
  feed_title: Значок "Передовая практика CII" - обновлённые проекты
  project_name_unknown:
  locale_name:
    en: Английский / English (en)
    de: Немецкий / Deutsch (de)
    fr: Французский / Français (fr)
    ja: Японский / 日本語 (ja)
    ru: Русский (ru)
    zh-CN: Китайский (упрощенный) / 简体 中文 (zh-CN)
  layouts:
    cii_best_practices: Передовая практика CII
    projects: Проекты
    users: Пользователи
    account: Учётная запись
    profile: Профиль
    settings: Настройки
    logout_html: <span class="glyphicon glyphicon-log-out"></span> Выйти
    signup_html: <span class="glyphicon glyphicon-user"></ span> Зарегистрироваться
    login_html: <span class="glyphicon glyphicon-log-in"></span> Войти в систему
    footer_text_html: '<small> <strong>Нужна помощь? Есть вопрос? Видите ошибку? Пожалуйста,
      отправьте <em><a href="mailto:&#99;ii&#45;badges&#45;questions&#45;own&#101;r&#64;lists&#46;coreinfrastructure&#46;or&#103;">электронное
      письмо</a></em> или <em><a href="https://github.com/coreinfrastructure/best-practices-badge/issues"
      target="_blank">вопрос на GitHub</a></em>.</strong> © 2015-2017 <a href="https://www.coreinfrastructure.org/
      target="_blank">Core Infrastructure Initiative</a>, a <a href="https://www.linuxfoundation.org/"
      target="_blank">Linux Foundation</a> Collaborative Project. All Rights Reserved.
      Please see our <a href="https://www.linuxfoundation.org/privacy" target="_blank">privacy
      policy</a> and <a href="https://www.linuxfoundation.org/terms" target="_blank">terms
      of use</a>. </small>

'
    choose_locale: Выберите язык
  admin_only: Только администратор.
  account_activations:
    activated: Учётная запись активирована!
    failed_activation: Недействительная ссылка активации
  password_resets:
    forgot_password:
    reset_password:
    password_confirmation:
    email_not_found: Адрес электронной почты не найден
    password_empty: Пароль не может быть пустым
    password_reset: Пароль был сброшен
    instructions_sent:
    cant_reset_nonlocal:
    reset_expired: Истекло время на сброс пароля.
    update_password:
  sessions:
    login_header:
    login_with_github_html:
    or:
    email:
    password:
    forgot_password:
    remember_me:
    login_custom:
    no_custom:
    already_logged_in:
    incorrect_login_info:
    invalid_combo:
    signed_in:
    not_activated:
    signed_out:
  static_pages:
    home:
      badge_program: Программа значков "Передовая практика CII"
      get_your_badge: Получите ваш значок сейчас!
      p1_html: 'Значок "Передовая практика" от <a href="https://www.linuxfoundation.org/">Linux
        Foundation (LF)</a> <a href="https://www.coreinfrastructure.org/">Core Infrastructure
        Initiative (CII)</a> - это возможность для проектов свободного и открытого
        ПО (Free/Libre and Open Source Software - FLOSS) показать, что они следуют
        передовым наработкам в отрасли. С помощью данного веб-приложения проекты могут
        добровольно и бесплатно оценить, насколько они используют передовые методы
        организации разработки свободного и открытого ПО, и опубликовать результат.
        Идея значка "Передовая практика CII" навеяна многими другими значками, доступными
        для проектов на GitHub. Видящие значок смогут быстро оценить, какие проекты
        FLOSS используют передовые методы и в результате скорее всего создают более
        качественное и защищенное программное обеспечение.

'
      p2_html: 'Более подробную информацию о программе значков CII "Передовая практика",
        в том числе о происхождении программы и <a href=''https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/criteria.md''>критериях</a>,
        можно найти на <a href=''https://github.com/coreinfrastructure/best-practices-badge''>странице
        проекта на GitHub</a>. Имеются <a href="/ru/project_stats">проектная статистика</a>
        и <a href="/ru/criteria">статистика по критериям</a>. <a href="/ru/projects">Страница
        проектов</a> показывает участвующие проекты и позволяет делать запросы по
        базе проектов (например, вы можете найти <a href="/ru/projects?gteq=100">проекты,
        проходящие по всем критериям</a>). Вы также можете взглянуть на <a href=''/ru/projects/1''>пример
        (в котором мы пытаемся получить наш собственный значок)</a>.

'
      p3_html: '<em>Конфиденциальность и юридические вопросы</em>: см. нашу <a href="https://www.linuxfoundation.org/privacy">политику
        конфиденциальности</a> и <a href="https://www.linuxfoundation.org/terms">условия
        использования</a>. Все общедоступное содержимое без кода выпущено под лицензией
        как минимум <a href="https://creativecommons.org/licenses/by/3.0/">Creative
        Commons Attribution версии 3.0 (CC-BY-3.0)</а>; более новый контент без кода
        выпущен под CC-BY версии 3.0 или выше (CC-BY-3.0+). Для коллективной ссылки
        или если не указано иное, пожалуйста, ссылайтесь на "CII Best Practices badge
        contributors".

'
    criteria:
      criteria: Критерии
      detailed_criteria_on_github: Подробные критерии приведены на GitHub.
      current_criteria: 'Текущее количество критериев: %{active} (действующие) + %{future}
        (будущие) = %{total} (всего).'
      criteria_must_should_suggested: 'В действующих критериях используются следующие
        ключевые слова: %{must} ОБЯЗАН (антоним - НЕДОПУСТИМО), %{should} СЛЕДУЕТ
        и %{suggested} РЕКОМЕНДУЕТСЯ.'
      criteria_na_met_details: В действующих критериях %{na_allowed} разрешает вариант
        "неприменимо" (N/A), %{met_url_required} требует URL, для удовлетворения критерию,
        %{details_present} содержит подробности в описании.
      project_counts: 'Всего записей о проектах: %{projects}; %{passing} полностью
        соответствуют критериям, и %{in_progress} в процессе.'
      project_stats_html: Вы можете просмотреть статистику по проектам с течением
        времени на странице со <a href="/project_stats">проектной статистикой</a>.
      level: Уровень
      must: '"ОБЯЗАН"'
      should: '"СЛЕДУЕТ"'
      suggested: '"РЕКОМЕНДУЕТСЯ"'
      total_active: Всего активных
      allow_na: Допускают N/A
      require_url: Требуют URL
      details: Есть подробности
      future: Будущие
  users:
    new:
      signup_header:
      intro_html:
      name:
      email:
      preferred_locale:
      password:
      password_confirmation:
      create_account:
      intro_github:
    edit:
      update_user_info:
      save_changes:
    update:
      profile_updated:
    show:
      edit_user:
      other_projects_edit:
      see_external:
      as_admin:
      send_email_to:
      delete_link_name:
      confirm_delete:
    destroy:
      cannot_delete_self:
      user_deleted:
    redirect_existing:
    new_activation_link_created:
    please_log_in:
  project_stats:
    index:
      project_stats_header: Статистика проектов
      all_projects: Все проекты
      projects_nontrivial: Проекты с заметным прогрессом
      projects_activity_30:
      daily_activity:
      reminders: Напоминания
      active_projects: Активные проекты (созданы/обновлялись в течение 30 дней)
      active_in_progress: 'Активные незавершенные проекты (созданы/обновлялись в течение
        30 дней)

'
      active_edited: 'Активные меняющиеся проекты (обновлялись в течение 30 дней)

'
      active_edited_in_progress: 'Активные меняющиеся незавершенные проекты (обновлялись
        в течение 30 дней)

'
      projects_created_since_yesterday:
      projects_updated_since_yesterday:
      projects_created_average_7_days:
      projects_updated_average_7_days:
      reminders_sent_since_yesterday: 'Напоминания, отправленные со вчерашнего дня

'
      reactivated_projects:
      admin_html:
      raw_data:
      json_format: Формат JSON
      csv_format:
      projects_created_updated_daily:
  projects:
    index:
      all:
      passing_100:
      in_progress_variable:
      add_link:
      add_new: Добавить новый проект
      badge_status: Состояние значка
      exclude_passing:
      text_search:
      name_or_description:
      search:
    table:
      id:
      name:
      description:
      website:
      license:
      owner:
      last_achieved:
      pachieved:
      can_also_sort:
      repository_url:
      create_time:
      update_time:
      user_id:
      paren_name_unknown:
      badge_level:
    new:
      thanks_adding:
      post_delay_warning:
      new_badge:
      may_select_html:
      select_one_github:
      submit_github:
      project_already_exists:
      url_of_homepage:
      placeholder_of_homepage:
      url_of_repo:
      placeholder_of_repo:
      submit_urls:
      final_text_html:
      sign_in_first:
      new_badge_or:
      original_repos:
      fork_repos:
    edit:
      repo_url_limits:
      changed_since_html:
      successfully_updated: Проект был успешно обновлен.
      congrats_new:
      lost_badge: Проект потерял значок.
      static_analysis_updated_html:
      save_and_continue: Сохранить (и продолжить)
      submit_and_exit: Отправить (и выйти)
      submit_cc_by_3plus_html:
      edit_status: Изменить статус значка проекта
    show:
      edit: Изменить
      delete: Удалить
      confirm_delete: 'Вы УВЕРЕНЫ, что хотите УДАЛИТЬ ВЕСЬ проект %{project_id}?

'
      back: Назад
      owned_by:
      created_at_html:
      updated_at_html:
      last_lost_html:
      last_achieved_html:
      cc_by_3plus_html:
      cc_by_3only_html:
    form_early:
      badge_intro:
        description:
        details_html:
      level:
        0_html:
        1_html:
        2_html:
        '0':
        '1':
        '2':
      got_badge:
        description_1:
        badge_alt:
        description_2:
        details_html:
        editing_description_html:
    form_basics:
      project_name:
        description:
        details:
        placeholder:
      description:
        description:
        details:
        placeholder: Описание проекта
      homepage_url:
        description: Какой URL у проекта (целиком)?
        placeholder: URL веб-сайта проекта
      repo_url:
        description:
        placeholder:
      implementation_languages:
        description:
        details:
        placeholder:
      cpe:
        description_html:
        details_html:
        placeholder:
      license:
        description_html:
        details_html:
        placeholder:
    misc:
      in_javascript:
        collapse_all_title:
        collapse_all:
        expand_all_title:
        expand_all:
        show_details:
        hide_details:
        show_all_details:
        hide_all_details:
        show_met_title:
        show_met_html:
        hide_met_title:
        hide_met_html:
        passing_alt: Достаточно для значка!
        barely_alt: Едва достаточно для значка.
        failing_alt: Недостаточно для значка.
        unknown_alt:
        met_url_placeholder:
        met_justification_placeholder:
        met_placeholder:
        unmet_placeholder:
        na_justification_placeholder:
        na_placeholder:
        unknown_placeholder:
      disabled_reminders:
      general_comments:
        description:
        placeholder:
      some_not_crypto_html:
      dont_use_crypto:
      future_header_html:
      toggle_details_title:
      details:
      url_required: Требуется URL
      future_criterion: Будущий критерий
      url_required_warning:
      justification_required_warning:
    delete:
      done: Проект успешно удален.
  report_mailer:
    subject_achieved_passing:
    subject_no_longer_passing:
    subject_new_project:
    subject_reminder:
    subject_project_deleted:
    new_project_heading:
    new_project_part1:
    new_project_part2:
    new_project_part3_html:
    new_project_part3_text:
    gained_level_part1:
    gained_level_part2:
    gained_level_part3:
    in_markdown_add:
    in_html_add:
    lost_level_message:
    ending:
  user_mailer:
    account_activation:
      before_html:
      before_text:
      activate:
      subject:
    github_welcome:
      before_html:
      before_text:
      subject:
    user_update:
      before_text:
      username_changed:
      email_changed:
      password_changed:
      locale_changed:
      current_state:
      after_text:
      subject:
    password_reset:
      before_html:
      before_text:
      after_html:
      after_text:
      subject:
      reset_password:
  criteria:
    '0':
      description_good:
        description: Веб-сайт проекта ОБЯЗАН кратко описывать, что делает программное
          обеспечение (какую проблему решает?).
        details: Описание ОБЯЗАНО быть на языке, который могут понять потенциальные
          пользователи (например, с минимумом жаргона).
        met_placeholder: "(Необязательно) Где находится краткое описание? Возможно,
          стоит указать URL."
      interact:
        description: 'Веб-сайт проекта ОБЯЗАН предоставлять информацию о том, как:
          получать и предоставлять обратную связь (например, отчеты об ошибках или
          улучшения) и вносить свой вклад в программное обеспечение.

'
        met_placeholder: "(Необязательно) Где находится краткое описание? Возможно,
          стоит указать URL."
      contribution:
        description: 'Описание того, как сделать вклад, ОБЯЗАНО объяснять процесс
          внесения вклада (например, используются ли pull request''ы).

'
        details: Мы предполагаем, что <a href="https://guides.github.com/activities/contributing-to-open-source/">проекты
          на GitHub используют issues и pull requests</a>, если не указано иное. Эта
          информация может быть короткой, например, ограничиваясь лишь указанием,
          что проект использует pull requests, issue tracker или сообщения в список
          рассылки (какой?).
        met_placeholder: "(Требуется URL) Каков процесс? По какому URL можно найти
          его объяснение?"
      contribution_requirements:
        description: В информацию о том, как внести вклад, СЛЕДУЕТ включать требования
          к приемлемым взносам (например, ссылку на любой требуемый стандарт кодирования).
        unmet_placeholder: Почему требования настолько очевидны, что эта информация
          не нужна?
      floss_license:
        description: ПО, создаваемое проектом, ОБЯЗАНО быть выпущено под свободной
          (FLOSS) лицензией.
        details: 'Свободное ПО (далее СПО) - это программное обеспечение, которое
          соответствует <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_Open_Source">Определению
          Открытого ПО</a> (<a href="https://opensource.org/osd-annotated">официальный
          текст на англ.</a>) или <a href="https://www.gnu.org/philosophy/free-sw.ru.html">Определению
          Свободного Программного Обеспечения</a>. Примеры таких лицензий включают
          <a href="http://creativecommons.org/publicdomain/zero/1.0/">CC0</a>, <a
          href="https://opensource.org/licenses/MIT">MIT</a>, <a href="https://opensource.org/licenses/BSD-2-Clause">BSD
          2-Clause</a>, <a href="https://opensource.org/License/BSD-3-Clause">BSD
          3-Clause</a>, <a href="https://opensource.org/licenses/Apache-2.0">Apache
          2.0</a>, <a href="https://opensource.org/licenses/lgpl-license">Меньшая
          стандартная общественная лицензия GNU (LGPL)</a> и <a href="https://opensource.org/licenses/gpl-license">Стандартная
          общественная лицензия GNU (GPL)</a>. Для наших целей это означает, что лицензия
          ОБЯЗАНА быть: <ul> <li><a href="https://opensource.org/licenses">одобренной
          Open Source Initiative (OSI)</a>, или</ li> <li><a href="https://www.gnu.org/licenses/license-list.html">свободной
          лицензией, одобренной Фондом Свободного Программного Обеспечения (FSF)</a>,
          или</li> <li><a href="https://www.debian.org/legal/licenses/">свободной
          лицензией, приемлемой для ветки main проекта Debian</a>, или</li> <li><a
          href="https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing">«хорошей»
          лицензией в понимании Fedora</a>.</li> </ul> ПО МОЖЕТ одновременно лицензироваться
          на других условиях (например, приемлема комбинация «GPLv2 или закрытая лицензия»).

'
      floss_license_osi:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы все варианты лицензий для ПО, создаваемого
          проектом, были <a href="https://opensource.org/licenses">одобрены Open Source
          Initiative (OSI).</a>

'
        details: 'Для одобрения OSI используется строгий процесс, чтобы определить,
          какие лицензии соответствуют Открытому ПО.

'
      license_location:
        description: 'Проект ОБЯЗАН публиковать лицензию или лицензии своих результатов
          в стандартном расположении в своем репозитории исходного кода.

'
        details: 'Например, в качестве файла верхнего уровня с именем LICENSE или
          COPYING. Имена файлов лицензии МОГУТ сопровождаться расширением, таким как
          «.txt» или «.md».

'
      documentation_basics:
        description: Проект ОБЯЗАН предоставлять базовую документацию для программного
          обеспечения, создаваемого проектом.
        details: 'Эта документация должна быть в некоторых формах (таких как текст
          или видео), которые включают в себя: как установить программное обеспечение,
          как его запустить, как его использовать (возможно, с помощью учебника с
          примерами) и как использовать его безопасно (например, что делать и чего
          не делать), если эти темы применимы для данного программного обеспечения.
          Документация по безопасности не обязательно должна быть длинной. Проект
          МОЖЕТ использовать гипертекстовые ссылки для не-проектных материалов в качестве
          документации. Если проект не создает программное обеспечение, выберите «неприменимо»
          (N/A).

'
        met_placeholder: "(Необязательно) Какие URL-адреса являются отправными точками
          для документации?"
      documentation_interface:
        description: Проект ОБЯЗАН предоставлять справочную документацию, описывающую
          внешний интерфейс (как входной, так и выходной) программного обеспечения,
          создаваемого проектом.
        details: 'Документация внешнего интерфейса объясняет конечному пользователю
          или разработчику, как его использовать. Это может включать в себя интерфейс
          прикладного программирования (API), если программное обеспечение его имеет.
          Если это библиотека, документируйте основные классы/типы и методы/функции,
          которые можно вызвать. Если это веб-приложение, определите его URL-интерфейс
          (часто его интерфейс REST). Если это интерфейс командной строки, документируйте
          параметры и настройки, которые он поддерживает. Во многих случаях лучше
          всего, если большая часть этой документации будет автоматически сгенерирована,
          чтобы эта документация была синхронизирована с программным обеспечением
          по мере его изменения, но это не требуется. Проект МОЖЕТ использовать гипертекстовые
          ссылки для не-проектных материалов в качестве документации. Документация
          МОЖЕТ быть автоматически сгенерирована (там, где это применимо, это часто
          наилучший способ создания документации). Документация интерфейса REST может
          быть сгенерирована с использованием Swagger/OpenAPI. Документация по интерфейсу
          кода МОЖЕТ быть сгенерирована с использованием таких инструментов, как <a
          href="http://usejsdoc.org/">JSDoc</a> (JavaScript), <a href="https://esdoc.org/">ESDoc</a>
          (JavaScript), pydoc (Python) и Doxygen (многие языки). Просто иметь комментарии
          в коде реализации недостаточно для выполнения этого критерия; должен быть
          простой способ увидеть информацию без чтения всего исходного кода. Если
          проект не создает программное обеспечение, выберите «неприменимо» (N/A).

'
      sites_https:
        description: 'Сайты проекта (веб-сайт, репозиторий и URL-адреса для загрузки)
          ОБЯЗАНЫ поддерживать HTTPS с использованием TLS.

'
        details: 'Вы можете получить бесплатные сертификаты от <a href="https://letsencrypt.org/">проекта
          Let''s Encrypt</a>. Проекты МОГУТ реализовать этот критерий, используя (например)
          <a href="https://help.github.com/articles/securing-your-github-pages-site-with-https/">GitHub
          Pages</a>, <a href="https://about.gitlab.com/2016/12/24/were-bringing-gitlab-pages-to-community-edition/">GitLab
          Pages</a> или <a href="https://sourceforge.net/blog/introducing-https-for-project-websites/">проектные
          страницы SourceForge</a>. Если вы используете GitHub Pages с пользовательскими
          доменами, вы МОЖЕТЕ использовать сеть доставки контента (CDN) в качестве
          прокси для поддержки HTTPS, например, описанную в <a href="https://blog.cloudflare.com/secure-and
          -fast-github-pages-with-cloudflare/">записи «Secure and fast GitHub Pages
          with CloudFlare»</a>, чтобы удовлетворить этот критерий. Если вы поддерживаете
          HTTP, мы настоятельно рекомендуем перенаправить HTTP-трафик на HTTPS.

'
      discussion:
        description: Проект ОБЯЗАН иметь один или несколько механизмов для обсуждения
          (включая предлагаемые изменения и проблемы), которые доступны для поиска,
          позволяют ссылаться на сообщения и темы по URL, позволяют новым людям участвовать
          в некоторых обсуждениях и не требуют установки на стороне клиента проприетарного
          программного обеспечения.
        details: Примерами приемлемых механизмов являются архивируемые списки рассылки,
          обсуждения в GitHub issues и pull requests, Bugzilla, Mantis и Trac. Асинхронные
          механизмы обсуждения (например, IRC) приемлемы, если они отвечают этим критериям;
          убедитесь, что есть механизм архивирования URL-адресов. Разрешено, хотя
          и не рекомендуется, использовать проприетарный JavaScript.
      english:
        description: 'Проекту СЛЕДУЕТ предоставлять документацию на английском языке
          и иметь возможность принимать отчеты об ошибках и комментарии о коде на
          английском языке.

'
        details: 'Английский в настоящее время является <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B8%D0%BD%D0%B3%D0%B2%D0%B0_%D1%84%D1%80%D0%B0%D0%BD%D0%BA%D0%B0">лингва
          франка</a> компьютерной техники; Поддержка английского языка увеличивает
          число потенциальных разработчиков и рецензентов во всем мире. Проект может
          соответствовать этому критерию, даже если английский не является основным
          языком его ключевых разработчиков.

'
      repo_public:
        description: 'Проект ОБЯЗАН иметь репозиторий исходного кода с контролем версий,
          который является общедоступным и имеет URL.

'
        details: 'URL МОЖЕТ быть таким же, как URL проекта. Проект МОЖЕТ использовать
          частные (непубличные) ветви в конкретных случаях, когда изменение не выпускается
          публично (например, для устранения уязвимости до того, как она будет открыта
          для публики).

'
      repo_track:
        description: 'Проектный репозиторий исходного кода ОБЯЗАН отслеживать, какие
          изменения были внесены, кто внес изменения и когда изменения были сделаны.

'
      repo_interim:
        description: 'Чтобы обеспечить возможность для проверки другими участниками,
          проектный репозиторий исходного кода ОБЯЗАН включать промежуточные версии
          для проверки между релизами; НЕДОПУСТИМО хранить в репозитории лишь финальные
          версии.

'
        details: 'Проекты МОГУТ опускать отдельные промежуточные версии из своих публичных
          репозиториев (например, те, которые фиксируют отдельные не обнародованные
          уязвимости, никогда не будут публично выпущены или включают материалы, которые
          не могут быть опубликованы на законных основаниях и не находятся в финальной
          версии).

'
      repo_distributed:
        description: 'РЕКОМЕНДУЕТСЯ, использовать распространенное программное обеспечение
          для управления версиями (например, git) для репозитория исходного кода проекта.

'
        details: 'Не требуется именно git, и проекты могут использовать централизованное
          программное обеспечение для управления версиями (например, Subversion) с
          обоснованием.

'
      version_unique:
        description:
        details:
      version_semver:
        description: 'РЕКОМЕНДУЕТСЯ использовать <a href="http://semver.org/lang/ru/">семантическое
          версионирование</a>.

'
        details:
      version_tags:
        description:
      release_notes:
        description: 'Проект ОБЯЗАН предоставлять с каждой выпускаемой версией замечания
          к выпуску - удобочитаемые человеком сведения об основных изменениях в этом
          выпуске, помогающие пользователям определить, должны ли они обновляться
          и какими будут последствия обновления. НЕДОПУСТИМО делать замечания к выпуску
          сырым выводом журнала управления версиями (например, результаты команды
          «git log» не являются замечаниями к выпуску). Проекты, результаты которых
          не предназначены для повторного использования в нескольких местах (например,
          программное обеспечение для одного веб-сайта или службы) И выдаются через
          непрерывную доставку (continuous delivery) МОГУТ выбрать «неприменимо» (N/A).

'
        details: 'Замечания к выпуску МОГУТ быть реализованы различными способами.
          Многие проекты предоставляют их в файле с именем «NEWS», «CHANGELOG» или
          «ChangeLog», возможно с расширениями, такими как «.txt», «.md» или «.html».
          Исторически термин «журнал изменений» означал журнал <em>для каждого</em>
          изменения, но для соответствия этим критериям требуется человекочитаемая
          сводка. Замечания к выпуску МОГУТ вместо этого быть предоставлены механизмами
          системы контроля версий, такими как <a href="https://github.com/blog/1547-release-your-software">процесс
          GitHub Releases</a>.

'
      release_notes_vulns:
        description: 'Замечания по выпуску ОБЯЗАНЫ упоминать каждую общеизвестную
          уязвимость, исправленную ​​в каждой новой версии. Это «неприменимо» (N/A),
          если нет заметок о выпуске или не было обнародованных уязвимостей.

'
      report_process:
        description: 'Проект ОБЯЗАН предоставить пользователям возможность отправлять
          сообщения об ошибках (например, используя систему отслеживания ошибок или
          список рассылки).

'
      report_tracker:
        description: 'СЛЕДУЕТ использовать трекер вопросов (issue tracker) для отслеживания
          отдельных вопросов.

'
        unmet_placeholder: Почему нет трекера?
      report_responses:
        description: 'Проект ОБЯЗАН подтверждать получение большинства сообщений об
          ошибках, отправленных за последние 2-12 месяцев (включительно); подтверждение
          не обязательно включает исправление.

'
      enhancement_responses:
        description: 'Проекту СЛЕДУЕТ реагировать на большинство (&gt;50%) запросов
          на улучшения в течение последних 2-12 месяцев (включительно).

'
        details: 'В качестве ответа МОЖЕТ быть «нет» или обсуждение выгод от данного
          улучшения. Цель состоит в том, чтобы по крайней мере на некоторые запросы
          был какой-то ответ, что указывает на то, что проект все еще жив. Для целей
          этого критерия не нужно учитывать поддельные запросы (например, от спамеров
          или автоматизированных систем). Если проект больше не принимает улучшения,
          выберите «неудовлетворенный» и укажите URL, проясняющий ситуацию для пользователей.
          Если проект большую часть времени перегружен количеством запросов на улучшения,
          выберите «не удовлетворяет» и объясните.

'
      report_archive:
        description: 'Проект ОБЯЗАН иметь общедоступный архив для отчетов и ответов
          для последующего поиска.

'
      vulnerability_report_process:
        description:
        details:
      vulnerability_report_private:
        description:
        details:
      vulnerability_report_response:
        description:
        details:
      build:
        description: Если программное обеспечение, создаваемое проектом, требует сборки
          для использования, проект ОБЯЗАН предоставить рабочую систему сборки, которая
          может автоматически пересобирать программное обеспечение из исходного кода.
        details: Система сборки определяет, какие действия необходимо предпринять
          для пересборки программного обеспечения (и в каком порядке), а затем выполняет
          эти действия. Например, она может вызывать компилятор для компиляции исходного
          кода. Если исполняемый файл создается из исходного кода, должна иметься
          возможность изменить исходный код проекта, а затем сгенерировать обновленный
          исполняемый файл с этими изменениями. Если программное обеспечение, создаваемое
          проектом, зависит от внешних библиотек, система сборки <em>не</em> обязана
          пересобирать эти внешние библиотеки. Если для использования программного
          обеспечения после изменения его исходного кода пересборка не требуется,
          выберите «неприменимо» (N/A).
      build_common_tools:
        description: 'РЕКОМЕНДУЕТСЯ использовать общеупотребительные инструменты для
          сборки программного обеспечения.

'
        details: Например, Maven, Ant, cmake, autotools, make или rake.
      build_floss_tools:
        description: Для сборки проекта СЛЕДУЕТ использовать только инструменты со
          свободными (FLOSS) лицензиями.
      test:
        description: 'Проект ОБЯЗАН использовать по крайней мере один автоматизированный
          набор тестов, опубликованный как свободное ПО (этот набор тестов может поддерживаться
          как отдельный проект свободного ПО).

'
        details: 'Проект МОЖЕТ использовать несколько автоматизированных наборов тестов
          (например, тот, который работает быстро, а другой - более тщательный, но
          требует специального оборудования).

'
      test_invocation:
        description: 'Набор тестов СЛЕДУЕТ запускать стандартным способом для этого
          языка.

'
        details: 'Например, «make check», «mvn test» или «rake test».

'
      test_most:
        description: 'РЕКОМЕНДУЕТСЯ охватывать набором тестов большинство (а в идеале
          все) ветви кода, поля ввода и функциональные возможности.

'
      test_continuous_integration:
        description: 'РЕКОМЕНДУЕТСЯ реализовать непрерывную интеграцию (при которой
          новый или измененный код с высокой частотой включается в центральный репозиторий
          кода, и на получившейся базе кода запускаются автоматические тесты).

'
      test_policy:
        description: 'Проект ОБЯЗАН иметь общую политику (формальную или нет), обязывающую
          добавлять тесты в набор автоматических тестов по мере добавления новых функциональных
          возможностей к программному обеспечению, создаваемому проектом.

'
        details: 'Если есть действующая политика, хотя бы «из уст в уста», которая
          говорит, что разработчики должны добавлять тесты в набор автотестов для
          новой функциональности, указывайте «соответствует».

'
      tests_are_added:
        description: 'Проект ОБЯЗАН иметь доказательства того, что критерий <a href="#test_policy">test_policy</a>
          о добавлении тестов соблюдался при недавних крупных изменениях ПО, создаваемого
          проектом.

'
        details: 'Крупная функциональность обычно упоминается в замечаниях к выпуску.
          Совершенство не требуется, просто доказательство того, что на практике тесты
          обычно добавляются в набор автотестов, когда к ПО, создаваемому проектом,
          добавляются новые крупные функции.

'
      tests_documented_added:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы эта политика добавления тестов (см. <a
          href="#test_policy">критерий test_policy</a>) была <em>задокументирована
          </em> в инструкции к предложениям об изменениях.

'
        details: 'Однако даже неформальное правило приемлемо, если тесты добавляются
          на практике.

'
      warnings:
        description:
        details:
      warnings_fixed:
        description:
        details: 'Это предупреждения, о которых упоминается при выполнении критерия
          <a href="#warnings">warnings</a>. Проект должен исправлять предупреждения
          или отмечать их в исходном коде как ложные срабатывания. В идеале не должно
          быть никаких предупреждений, но проект МОЖЕТ принимать существование каких-то
          предупреждений (обычно менее 1 предупреждения на 100 строк или менее 10
          предупреждений).

'
      warnings_strict:
        description:
        details:
      know_secure_design:
        description: 'По крайней мере один основной разработчик на проекте ОБЯЗАН
          знать, как проектировать безопасное программное обеспечение.

'
        details: 'Это требует понимания следующих принципов проектирования, в том
          числе 8 принципов из <a href="http://web.mit.edu/Saltzer/www/publications/protection/">Saltzer
          and Schroeder</a>: <ul> <li>экономичность механизма (поддерживать дизайн
          ПО как простым и компактным, так и практичным, например, с помощью массовых
          упрощений) <li>отказобезопасные значения по умолчанию (доступ по умолчанию
          должен быть запрещён, а установка проектов по умолчанию должна быть в защищённой
          конфигурации) <li>полное отграничение (любой доступ, который может быть
          ограничен, должен проверяться на достаточность прав доступа и не иметь обходных
          путей) <li>открытый дизайн (механизмы безопасности должны полагаться не
          на незнание их злоумышленником, а на более простым образом защищаемые и
          изменяемые  данные, типа ключей и паролей) <li>разделение привилегий (в
          идеале доступ к важным объектам должен зависеть от более чем одного условия,
          так чтобы взлом одной системы защиты не приводил к полному доступу; напр.,
          многофакторная аутентификация, такая как требование и пароля, и аппаратного
          токена, сильнее однофакторной) <li>минимальные привилегии (процессы должны
          работать с минимальными привилегиями, необходимыми для выполнения ими своих
          функций) <li>наименее общий механизм (дизайн должен минимизировать механизмы,
          общие для нескольких пользователей, и следовательно зависящие от всех этих
          пользователей, например, каталоги для временных файлов) <li>психологическая
          приемлемость (человеческий интерфейс должен быть спроектирован для удобства
          использования - может помочь разработка для «наименьшего удивления») <li>ограничение
          периметра атаки (периметр атаки - множество разных точек, в которых злоумышленник
          может попытаться ввести или извлечь данные - должен быть ограничен) <li>подтверждение
          ввода с помощью белых списков (входы обычно должны проверяться, на корректность
          до их принятия; эта проверка должна использовать белые списки (которые принимают
          только известные значения), а не черные списки (которые пытаются перечислить
          известные плохие значения)). </ul> «Основной разработчик» в проекте - это
          любой, кто знаком с базой кода проекта, без затруднений может вносить в
          него изменения и признан таковым большинством других участников проекта.
          Основной разработчик, как правило, неоднократно вносит вклад в течение последнего
          года (через код, документацию или ответы на вопросы). Разработчики обычно
          считаются основными разработчиками, если они инициируют проект (и не покинули
          проект более трех лет назад), имеют возможность получать информацию по закрытому
          каналу для отчетов об уязвимостях (если таковой имеется), могут принимать
          коммиты от имени проекта или делать финальные релизы программного обеспечения
          проекта. Если есть только один разработчик, этот человек является основным
          разработчиком.

'
      know_common_errors:
        description: 'По крайней мере, один из основных разработчиков проекта ОБЯЗАН
          знать об общих видах ошибок, которые приводят к уязвимостям в этом виде
          программного обеспечения, а также по крайней мере одному методу противодействия
          или смягчения каждого из них.

'
        details: 'Примеры (в зависимости от типа ПО) включают внедрение SQL-кода (injection),
          внедрение на уровне ОС, классическое переполнение буфера, межсайтовый скриптинг,
          отсутствие проверки подлинности и отсутствие авторизации. Обычно используемые
          списки уязвимостей можно найти в <a href="http://cwe.mitre.org/top25/">CWE/SANS
          top 25</a> или <a href="https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project">OWASP
          Top 10</a>.

'
      crypto_published:
        description: 'Программное обеспечение, созданное проектом, ОБЯЗАНО использовать
          по умолчанию только публикуемые криптографические протоколы и алгоритмы,
          которые анализируются экспертами (если используются криптографические протоколы
          и алгоритмы).

'
        details: 'Эти криптографические критерии не всегда применяются, поскольку
          некоторые программы не нуждаются в прямом использовании криптографических
          возможностей.

'
      crypto_call:
        description: Если программное обеспечение, создаваемое проектом, является
          приложением или библиотекой, и его основной целью является не внедрение
          криптографии, тогда для реализации криптографических функций СЛЕДУЕТ обращаться
          к программному обеспечению, специально предназначенному для этого; НЕ СЛЕДУЕТ
          повторно реализовывать свои собственные функции.
      crypto_floss:
        description: Вся функциональность программного обеспечения, создаваемого проектом,
          которая зависит от криптографии, ОБЯЗАНА быть реализована с использованием
          свободного ПО.
        details: См. <a href="https://opensource.org/osr">Требования к открытым стандартам
          для программного обеспечения в рамках Open Source Initiative (на англ.)</a>.
      crypto_keylength:
        description: Механизмы безопасности в программном обеспечении, создаваемом
          проектом, ОБЯЗАНЫ использовать стандартные длины криптографических ключей,
          которые, по крайней мере, соответствуют минимальным требованиям NIST до
          2030 года (как указано в 2012 году). Проект ОБЯЗАН предоставлять возможность
          настройки ПО таким образом, чтобы уменьшенные длины ключей были полностью
          отключены.
        details: 'Эти минимальные длины в битах перечислены далее: симметричный ключ
          - 112, модуль факторизации - 2048, дискретный логарифмический ключ - 224,
          дискретная логарифмическая группа - 2048, эллиптическая кривая - 224 и хеш
          - 224 (хеширование пароля не покрывается этой длиной, больше информации
          о хешировании пароля можно найти в <a href="#crypto_password_storage">критерии
          crypto_password_storage</a>). См. <a href="http://www.keylength.com">http://www.keylength.com</a>
          для сравнения рекомендаций по длинам криптографических ключей от различных
          организаций. Программное обеспечение МОЖЕТ допускать меньшие длины ключей
          в некоторых конфигурациях (в идеале не должно, поскольку это позволяет атаки
          через понижение длины ключа, но иногда требуется более короткая длина ключа
          для обеспечения взаимодействия с другими системами).'
      crypto_working:
        description: Механизмы безопасности по умолчанию в программном обеспечении,
          создаваемом проектом, НЕДОПУСТИМО делать зависимыми от сломанных криптографических
          алгоритмов (например, MD4, MD5, single DES, RC4, Dual_EC_DRBG) или использовать
          режимы шифрования, которые не подходят для контекста (например, режим ECB
          почти никогда не подходит, потому что внутри зашифрованного ECB текста обнаруживаются
          идентичные блоки, как можно видеть на примере <a href="https://blog.filippo.io/the-ecb-penguin/">«пингвина
          ECB»</a>, а режим CTR часто неприемлем, поскольку не выполняет аутентификацию
          и приводит к дубликатам, если состояние ввода повторяется).
        details: Во многих случаях лучше всего выбирать режим алгоритма с блочным
          шифром, предназначенный для сочетания секретности и аутентификации, например,
          Galois / Counter Mode (GCM) и EAX. Проекты МОГУТ разрешать пользователям
          включать сломанные механизмы, где это необходимо для совместимости, но в
          таких случаях пользователи знают, что они это делают.
      crypto_weaknesses:
        description: Механизмы безопасности по умолчанию в программном обеспечении,
          создаваемом проектом, НЕ СЛЕДУЕТ делать зависимыми от криптографических
          алгоритмов или режимов с известными серьезными слабостями (например, криптографический
          алгоритм хеширования SHA-1 или режим CBC в SSH).
        details: 'Проблемы, связанные с режимом CBC в SSH, обсуждаются в <a href="https://www.kb.cert.org/vuls/id/958563">описании
          уязвимости CERT: SSH CBC</a>.'
      crypto_pfs:
        description: В механизмах безопасности в программном обеспечении, создаваемом
          проектом, СЛЕДУЕТ реализовать совершенную прямую секретность для протоколов
          соглашений о ключах, чтобы ключ сеанса, произведённый из набора долгосрочных
          ключей, не мог быть скомпрометирован, если один из долгосрочных ключей скомпрометирован
          в будущем.
      crypto_password_storage:
        description: Если программное обеспечение, создаваемое проектом, приводит
          к сохранению паролей для аутентификации внешних пользователей, НЕОБХОДИМО
          хранить пароли как итерированные хеши с солью для каждого пользователя с
          использованием алгоритма (итерированного) растяжения ключа (например, PBKDF2,
          Bcrypt или Scrypt).
        details: Этот критерий применяется только тогда, когда программное обеспечение
          требует проверки пользователей с использованием паролей, таких как серверные
          веб-приложения. Он не применяется в тех случаях, когда программное обеспечение
          хранит пароли для аутентификации в других системах (например, программное
          обеспечение реализует клиент для какой-либо другой системы), поскольку по
          крайней мере части этого программного обеспечения должны часто обращаться
          к нехешированному паролю.
      crypto_random:
        description: Механизмы безопасности в программном обеспечении, создаваемом
          проектом, ОБЯЗАНЫ генерировать все криптографические ключи и временные значения
          с использованием криптографически безопасного генератора случайных чисел;
          НЕДОПУСТИМО делать это с использованием генераторов, которые криптографически
          небезопасны.
        details: Криптографически безопасный генератор случайных чисел может быть
          аппаратным генератором случайных чисел или криптографически безопасным генератором
          псевдослучайных чисел (CSPRNG), использующим такие алгоритмы как Hash_DRBG,
          HMAC_DRBG, CTR_DRBG, Yarrow или Fortuna. Примеры вызовов <em>защищенных</em>
          генераторов случайных чисел включают java.security.SecureRandom в Java и
          window.crypto.getRandomValues в JavaScript. Примеры вызовов <em>небезопасных</em>
          генераторов случайных чисел включают java.util.Random в Java и Math.random
          в JavaScript.
      delivery_mitm:
        description: 'Проект ОБЯЗАН использовать механизм доставки, устойчивый против
          атак посредника (MITM). Использование https или ssh + scp является приемлемым.

'
        details: 'Еще более сильным механизмом является выпуск программного обеспечения
          в виде пакетов, подписанных цифровой подписью, поскольку это смягчает атаки
          на систему распространения, но это работает только в том случае, если пользователи
          могут быть уверены, что открытые ключи для подписей верны <em>и</em> если
          пользователи действительно проверяют подпись.

'
      delivery_unsigned:
        description: НЕДОПУСТИМО получать криптографические контрольные суммы (например,
          sha1sum) по HTTP и использовать их без проверки криптографической подписи.
        details: Эти хеши могут быть изменены при передаче.
      vulnerabilities_fixed_60_days:
        description:
        details:
      vulnerabilities_critical_fixed:
        description: Проектам СЛЕДУЕТ оперативно исправлять критические уязвимости
          после сообщения о них.
      no_leaked_credentials:
        description: 'НЕДОПУСТИМА утечка действующих частных учетных данных (например,
          рабочий пароль или закрытый ключ), предназначенных для ограничения общего
          доступа, из публичных репозиториев.

'
        details: 'Проект МОЖЕТ пропускать «шаблонные» учетные данные для тестирования
          и несущественные базы данных, при условии что они не предназначены для ограничения
          общего доступа.

'
      static_analysis:
        description: 'По крайней мере, один инструмент анализа статического кода ОБЯЗАН
          применяться к любой предлагаемой основной версии создаваемого ПО до её выпуска,
          если есть хотя бы один инструмент на свободном ПО, который реализует этот
          критерий на выбранном языке.

'
        details: 'Средство анализа статического кода анализирует программный код (как
          исходный код, промежуточный код или исполняемый файл), не выполняя его с
          конкретными входами. Для целей этого критерия предупреждения компилятора
          и «безопасные» языковые режимы не считаются инструментами анализа статического
          кода (они обычно избегают глубокого анализа, поскольку скорость имеет жизненно
          важное значение). Примеры таких статических инструментов анализа кода включают
          <a href="http://cppcheck.sourceforge.net/">cppcheck</a>, <a href="http://clang-analyzer.llvm.org/">статический
          анализатор Clang</a>, <a href="http://findbugs.sourceforge.net/">FindBugs</a>
          (включая <a href="https://h3xstream.github.io/find-sec-bugs/">FindSecurityBugs</a>),
          <a href="https://pmd.github.io/">PMD</a>, <a href="http://brakemanscanner.org/">Brakeman</a>,
          <a href="https://scan.coverity.com/">Анализатор качества Coverity</a>, и
          <a href="http://www8.hp.com/au/en/software-solutions/static-code-analysis-sast/index.html">статический
          анализатор кода HP Fortify</a>. Более крупные списки инструментов можно
          найти в таких местах, как <a href="https://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis">Wikipedia
          list of tools for static code analysis</a>, <a href="https://www.owasp.org/index.php/Static_Code_Analysis">OWASP
          information on static code analysis</a>, <a href="http://samate.nist.gov/index.php/Source_Code_Security_Analyzers.html
          ">NIST list of source code security analyzers</a> и <a href="http://www.dwheeler.com/essays/static-analysis-tools.html">Wheeler''s
          list of static analysis tools</a>. <a href="https://continuousassurance.org/">SWAMP</a>
          является бесплатной платформой для оценки уязвимостей в программном обеспечении
          с использованием различных инструментов. Если для используемого языка(ов)
          реализации не используются инструменты статического анализа на свободном
          ПО, выберите «неприменимо» (N/A).

'
        na_placeholder: 'Почему этот критерий не может быть выполнен (например, для
          используемого языка не существует инструментов на свободном ПО)?

'
        met_placeholder: 'Какие инструменты статического анализа используются?

'
      static_analysis_common_vulnerabilities:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы по крайней мере один из инструментов статического
          анализа, используемых для критерия static_analysis, включал правила или
          подходы для поиска распространенных уязвимостей в анализируемом языке или
          среде.

'
      static_analysis_fixed:
        description: 'Все уязвимости, связанные со средней и высокой степенью серьёзности,
          обнаруженные при статическом анализе кода, ОБЯЗАНЫ своевременно исправляться
          после их подтверждения.

'
        details: 'Уязвимость имеет среднюю и высокую степень серьёзности, если ее
          оценка по <a href="https://nvd.nist.gov/cvss.cfm">CVSS 2.0</a> - 4 или выше.

'
      static_analysis_often:
        description: 'РЕКОМЕНДУЕТСЯ выполнять анализ статического исходного кода при
          каждом коммите или по крайней мере ежедневно.

'
      dynamic_analysis:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы к любой предлагаемой основной (major) версии
          программного обеспечения перед её выпуском применялся по крайней мере один
          инструмент динамического анализа.

'
        details: 'Инструмент динамического анализа проверяет программное обеспечение,
          выполняя его с конкретными входными данными. Например, проект МОЖЕТ использовать
          инструмент фаззинг-тестирования (например, <a href="http://lcamtuf.coredump.cx/afl/">American
          Fuzzy Lop</a>) или сканер веб-приложений (например, <a Href = "https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project">OWASP
          ZAP</a> или <a href="http://w3af.org/">w3af</a>). В некоторых случаях проект
          <a href="https://github.com/google/oss-fuzz#introduction">OSS-Fuzz</a> может
          быть готов применить фаззинг-тестирование к вашему проекту. Для целей этого
          критерия инструмент динамического анализа должен каким-то образом варьировать
          исходные данные, чтобы искать проблемы разного рода <em>или</em> быть автоматическим
          набором тестов с покрытием веток исполнения не менее 80%. Страница <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7_%D0%BA%D0%BE%D0%B4%D0%B0">Википедии
          о динамическом анализе</a> и <a href = "https://www.owasp.org/index.php
          / Fuzzing ">cтраница OWASP о фаззинг-тестировании</a> указывают некоторые
          инструменты динамического анализа. Использование инструмента/ов анализа
          МОЖЕТ, но не обязано быть сосредоточено на поиске уязвимостей в безопасности.

'
      dynamic_analysis_unsafe:
        description: 'РЕКОМЕНДУЕТСЯ регулярно использовать по меньшей мере один динамический
          инструмент (например, fuzzer или сканер веб-приложения) в сочетании с механизмом
          для обнаружения проблем безопасности памяти, таких как перезапись буфера,
          если программное обеспечение, создаваемое проектом, включает части, написанные
          на небезопасном языке (например, C или C++). Если проект не создает программное
          обеспечение, написанное на небезопасном языке, выберите «неприменимо» (N/A).

'
        details: 'Примерами механизмов обнаружения проблем безопасности памяти являются
          <a href="https://github.com/google/sanitizers/wiki/AddressSanitizer">Address
          Sanitizer (ASAN)</a> (доступен в GCC и LLVM), <a Href = "http://clang.llvm.org/docs/MemorySanitizer.html">Memory
          Sanitizer</a> и <a href="http://valgrind.org/">valgrind</a>. Другие потенциально
          используемые инструменты включают <a href="http://clang.llvm.org/docs/ThreadSanitizer.html">Thread
          Sanitizer</a> и <a href = "http://clang.llvm.org/ Docs / UndefinedBehaviorSanitizer.html
          ">Undefined Behavior Sanitizer</a>. Достаточно широкое использование утверждений
          (assertions) тоже может подходить.

'
      dynamic_analysis_enable_assertions:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы программное обеспечение, создаваемое проектом,
          включало в себя достаточно много утверждений (assertions) времени выполнения,
          проверяемых при динамическом анализе.

'
      dynamic_analysis_fixed:
        description: 'Проект ОБЯЗАН своевременно исправлять все уязвимости средней
          и высокой степени серьёзности, обнаруженные при динамическом анализе кода,
          после их подтверждения.

'
        details: 'Уязвимость имеет среднюю либо высокую степень серьёзности, если
          ее базовая оценка по <a href="https://nvd.nist.gov/cvss.cfm">CVSS 2.0</a>
          равна 4. Если вы не используете динамический анализ кода и, следовательно,
          не обнаружили уязвимостей таким способом, выберите «неприменимо» (N/A).

'
      installation_common:
        description: 'СЛЕДУЕТ предоставлять возможность легко установить и удалить
          ПО, создаваемое проектом, с использованием общепринятых способов.

'
        details: 'Примеры включают использование менеджера пакетов (на уровне системы
          или языка), «make install / uninstall» (с поддержкой DESTDIR), контейнер
          в стандартном формате или образ виртуальной машины в стандартном формате.
          Процесс установки и удаления (например, его упаковка) МОЖЕТ быть реализован
          третьей стороной, при условии что он построен на свободном ПО.

'
      build_reproducible:
        description: 'Проекту РЕКОМЕНДУЕТСЯ обеспечивать <a href="https://reproducible-builds.org/">воспроизводимую
          сборку</a>.  Если сборка не требуется (например, в случае языков сценариев,
          где исходный код используется непосредственно вместо компиляции), выберите
          «N/A».

'
        details: 'Воспроизводимая сборка означает, что несколько сторон могут независимо
          повторить процесс генерации информации из исходных файлов и получить аналогичный
          результат с точностью до бита. В некоторых случаях воспроизводимости можно
          достичь путем принудительного выставления окружения. Разработчики JavaScript
          могут рассмотреть возможность использования npm shrinkwrap и webpack OccurenceOrderPlugin.
          Пользователи GCC и clang могут найти полезной опцию -frandom-seed. Среда
          сборки (включая набор инструментов) часто может быть определена для внешних
          сторон путём указания криптографической суммы (hash) для конкретного контейнера
          или виртуальной машины, которые они могут использовать для пересборки. <a
          href="https://reproducible-builds.org/docs/">В проекте reproducible-builds.org
          есть документация о том, как это сделать </a>.

'
      crypto_used_network:
        description: 'СЛЕДУЕТ поддерживать безопасные протоколы для всех сетевых коммуникаций
          в ПО, создаваемом проектом, такие как SSHv2 или новее, TLS1.2 или новее
          (HTTPS), IPsec, SFTP и SNMPv3. По умолчанию СЛЕДУЕТ отключать небезопасные
          протоколы, такие как FTP, HTTP, telnet, SSLv3 или более ранние версии, и
          SSHv1, и разрешать их только в том случае, если пользователь явным образом
          это задаёт. Если программное обеспечение, созданное проектом, не поддерживает
          сетевые коммуникации, выберите «неприменимо» (N/A).

'
      crypto_tls12:
        description: 'Если ПО, создаваемое проектом, поддерживает или использует TLS,
          ему СЛЕДУЕТ поддерживать как минимум версию TLS 1.2. Примечание: предшественник
          TLS называется SSL. Если программное обеспечение не использует TLS, выберите
          «неприменимо» (N/A).

'
      crypto_certificate_verification:
        description: Программное обеспечение, созданное проектом, ОБЯЗАНО, если оно
          поддерживает TLS, выполнять проверку сертификата TLS по умолчанию при использовании
          TLS, в том числе в подресурсах. Если программное обеспечение не использует
          TLS, выберите «неприменимо» (N/A).
        details: 'Обратите внимание, что неправильная проверка сертификата TLS является
          распространенной ошибкой. Для дальнейших сведений см. <a href="http://crypto.stanford.edu/~dabo/pubs/abstracts/ssl-client-bugs.html">«Самый
          опасный код в мире: проверка SSL-сертификатов в Non -Browser Software» Мартина
          Георгиева и др. (на англ.)</a> и <a href="https://blogs.gnome.org/mcatanzaro/2016/03/12/do-you-trust-this-application/">«Вы
          доверяете этому приложению?» Майклом Катанзаро (на англ.)</a>.'
      crypto_verification_private:
        description: Если ПО, создаваемое проектом, поддерживает TLS, ему СЛЕДУЕТ
          выполнять проверку сертификата TLS по умолчанию при использовании TLS, в
          том числе в подресурсах. Если программное обеспечение не использует TLS,
          выберите «неприменимо» (N/A).
      hardened_site:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы веб-сайт проекта, репозиторий (если он
          доступен через Интернет) и сайт загрузки (если он существует отдельно) включали
          в себя укрепляющие безопасность (hardening) заголовки с ужесточёнными значениями.

'
        details: 'Обратите внимание, что GitHub отвечает этому критерию. Такие сайты
          как https://securityheaders.io/ могут быстро проверить использование. Ключевыми
          укрепляющими безопасность заголовками являются: Content Security Policy
          (CSP), HTTP Strict Transport Security (HSTS), X-Content-Type-Options (выставленный
          в «nosniff»), X-Frame-Options и X-XSS-Protection.

'
      hardening:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы в ПО, создаваемом проектом, использовались
          механизмы укрепления безопасности (hardening), чтобы дефекты программного
          обеспечения с меньшей вероятностью приводили к уязвимостям в безопасности.

'
        details: 'Механизмы укрепления безопасности могут включать HTTP-заголовки,
          такие как Content Security Policy (CSP), флаги компилятора для противостояния
          атакам (например, -fstack-protector) или флаги компилятора, устраняющие
          неопределенное поведение. Для наших целей политика наименьших привилегий
          не считается механизмом укрепления безопасности (использовать наименьшие
          достаточные привилегии важно, но этому посвящён отдельный критерий).

'
    '1':
      contribution_requirements:
        description:
      dco:
        description:
        details:
      governance:
        description:
        details:
      code_of_conduct:
        description:
        details:
      roles_responsibilities:
        description:
        details:
      access_continuity:
        description:
      bus_factor:
        description:
        details:
      documentation_roadmap:
        description:
        details:
      documentation_architecture:
        description:
        details:
      documentation_security:
        description:
        details:
      documentation_quick_start:
        description:
        details:
      assurance_case:
        description:
        details:
      documentation_current:
        description:
        details:
      documentation_achievements:
        description:
        details:
      accessibility_best_practices:
        description: 'Проекту (как на сайтах проекта, так и в результатах работы проекта)
          СЛЕДУЕТ следовать передовой практике общедоступности, чтобы люди с ограниченными
          возможностями могли участвовать в проекте и использовать результаты проекта,
          где это имеет смысл.

'
        details:
      internationalization:
        description:
        details:
      sites_password_security:
        description:
        details:
      maintenance_or_update:
        description:
      report_tracker:
        description:
      vulnerability_report_credit:
        description:
      vulnerability_response_process:
        description:
        details:
      coding_standards:
        description:
        details:
      coding_standards_enforced:
        description:
        details:
      build_standard_variables:
        description:
        details:
      build_preserve_debug:
        description:
        details:
      build_non_recursive:
        description:
        details:
      build_repeatable:
        description:
        details:
      installation_common:
        description:
        details:
      installation_standard_variables:
        description:
      installation_development_quick:
        description:
        details:
      external_dependencies:
        description:
        details:
      dependency_monitoring:
        description:
        details:
      updateable_reused_components:
        description:
        details:
      interfaces_current:
        description:
      automated_integration_testing:
        description:
        details:
      regression_tests_added50:
        description:
      test_statement_coverage80:
        description:
        details:
      test_policy_mandated:
        description:
      tests_documented_added:
        description:
      warnings_strict:
        description:
      implement_secure_design:
        description:
        details:
      crypto_weaknesses:
        description:
      crypto_algorithm_agility:
        description:
      crypto_credential_agility:
        description:
      crypto_used_network:
        description:
      crypto_tls12:
        description:
      crypto_certificate_verification:
        description:
        details:
      crypto_verification_private:
        description:
      signed_releases:
        description:
        details:
      version_tags_signed:
        description:
      input_validation:
        description:
        details:
      hardening:
        description:
        details:
      static_analysis_common_vulnerabilities:
        description:
      dynamic_analysis_unsafe:
        description:
      achieve_passing:
        description:
    '2':
      bus_factor:
        description:
      contributors_unassociated:
        description:
        details:
      copyright_per_file:
        description:
        details:
      license_per_file:
        description:
        details:
      repo_distributed:
        description:
      small_tasks:
        description:
        details:
      require_2FA:
        description:
      secure_2FA:
        description:
        details:
      code_review_standards:
        description:
        details:
      two_person_review:
        description:
      build_reproducible:
        description:
        details: 'Воспроизводимая сборка означает, что несколько сторон могут независимо
          повторить процесс генерации информации из исходных файлов и получить аналогичный
          результат с точностью до бита. В некоторых случаях воспроизводимости можно
          достичь путем принудительного выставления окружения. Разработчики JavaScript
          могут рассмотреть возможность использования npm shrinkwrap и webpack OccurenceOrderPlugin.
          Пользователи GCC и clang могут найти полезной опцию -frandom-seed. Среда
          сборки (включая набор инструментов) часто может быть определена для внешних
          сторон путём указания криптографической суммы (hash) для конкретного контейнера
          или виртуальной машины, которые они могут использовать для пересборки. <a
          href="https://reproducible-builds.org/docs/">В проекте reproducible-builds.org
          есть документация о том, как это сделать </a>.

'
      test_invocation:
        description:
      test_continuous_integration:
        description:
        details:
      test_statement_coverage90:
        description:
      test_branch_coverage80:
        description:
      crypto_used_network:
        description:
      crypto_tls12:
        description:
      hardened_site:
        description:
        details:
      security_review:
        description:
        details:
      hardening:
        description:
      dynamic_analysis:
        description: 'Проект ОБЯЗАН применять хотя бы один инструмент динамического
          анализа к любой предлагаемой основной версии ПО, создаваемого проектом до
          её выпуска.

'
      dynamic_analysis_enable_assertions:
        description:
      achieve_silver:
        description:
  headings:
    Accessibility and internationalization:
    Analysis:
    Automated test suite:
    Identification:
    Basic project website content:
    Basics:
    Bug-reporting process:
    Change Control:
    Coding standards:
    Documentation:
    Dynamic code analysis:
    Externally-maintained components:
    Future:
    future:
    Installation system:
    New functionality testing:
    OSS License:
    Other:
    Other security issues:
    Previous versions:
    Project oversight:
    Public version-controlled source repository:
    Publicly known vulnerabilities fixed:
    Quality:
    Release notes:
    Reporting:
    Secure development knowledge:
    Secure release:
    Secured delivery against man-in-the-middle (MITM) attacks:
    Security:
    Static code analysis:
    Unique version numbering:
    Use basic good cryptographic practices:
    Vulnerability report process:
    Warning flags:
    Working build system:
  criterion_status:
    Met: Соответствует
    Unmet: Не соответствует
    NA: Неприменимо
  last_entry:
  error_messages:
    need_home_page_or_url:
    form_contains:
      one: Форма содержит 1 ошибку.
      other: Форма содержит %{count} ошибки.
      few: Форма содержит %{count} ошибки.
      many: Форма содержит %{count} ошибок.
    comma_separated_list:
    begin_with_cpe:
    not_an_email:
    known_bad_password:
    valid_text:
    url_message:
