# Read about fixtures at
# http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# WARNING: If you add test records here, you must surprisingly
# modify other test code that you might expect to be unrelated. The problem
# is that tests are not reliably cleaned up after running,
# leading to intermittent failures.  This is issue #397:
# https://github.com/coreinfrastructure/best-practices-badge/issues/397
# To work around this problem, commit 3b87c59b9902dd modified
# test cases to forcibly reset the test status, but this creates a
# subtle interdependency on the number of fixtures here.

one:
  user: test_user
  name: Pathfinder OS
  description: Operating system for Pathfinder rover
  homepage_url: https://www.nasa.gov
  license: MIT
  repo_url: https://www.nasa.gov/pathfinder
  created_at: '2000-01-01'
  updated_at: '2000-01-01'
  badge_percentage_0: 0
  static_analysis_status: Met

two:
  user: test_user_melissa
  name: Mars Ascent Vehicle (MAV)
  description: Operating system for Pathfinder rover
  homepage_url: https://www.nasa.gov
  license: MIT
  repo_url: https://www.nasa.gov/mav
  badge_percentage_0: 0

# TODO: Generate list of status fields from central location.
# No justifications means failing status.
perfect_unjustified:
  user: test_user
  name: Unjustified perfect project
  description: The perfect project
  homepage_url: https://www.example.org
  repo_url: https://www.example.org/code2
  license: MIT
  badge_percentage_0: 86
  badge_percentage_1: 0
  badge_percentage_2: 5
<% Criteria['0'].keys.each do |criterion| %>
  <%= criterion.to_s + '_status' %>: Met
<% end %>
  release_notes_status: N/A
  vulnerability_report_private_status: N/A
  test_invocation_status: Unmet
  test_most_status: Unmet
  crypto_certificate_verification_status: Unmet
  build_reproducible_status: '?'

# TODO: Generate list of status fields from central location.
perfect_passing:
  user: test_user
  name: Justified perfect passing project
  description: The perfect passing project
  homepage_url: https://www.example.org
  repo_url: https://www.example.org/code3
  implementation_languages: JavaScript, Java, C++ # Handle multiple names
  license: MIT
  badge_percentage_0: 100
  badge_percentage_1: 13
  badge_percentage_2: 23
  achieved_passing_at: 2015-02-15T12:00:00
<% Criteria['0'].keys.each do |criterion| %>
  <%= criterion.to_s + '_status' %>: Met
  <%= criterion.to_s + '_justification' %>: >
    For more information see <https://www.example.org/>
<% end %>

perfect_silver:
  user: test_user
  name: Justified perfect silver project
  description: The perfect silver project
  homepage_url: https://www.example.org
  repo_url: https://www.example.org/code4
  implementation_languages: JavaScript, Java, C++ # Handle multiple names
  license: MIT
  badge_percentage_0: 100
  badge_percentage_1: 100
  badge_percentage_2: 41
  achieved_passing_at: 2015-02-15T12:00:00
<% (Criteria['0'].keys + Criteria['1'].keys).each do |criterion| %>
  <%= criterion.to_s + '_status' %>: Met
  <%= criterion.to_s + '_justification' %>: >
    For more information see <https://www.example.org/>
<% end %>

perfect:
  user: test_user
  name: Justified perfect project
  description: The perfect project
  homepage_url: https://www.example.org
  repo_url: https://www.example.org/code5
  implementation_languages: JavaScript, Java, C++ # Handle multiple names
  license: MIT
  badge_percentage_0: 100
  badge_percentage_1: 100
  badge_percentage_2: 100
  achieved_passing_at: 2015-02-15T12:00:00
<% Project::ALL_CRITERIA_STATUS.each do |criterion_status| %>
  <%= criterion_status %>: Met
<% end %>
<% Project::ALL_CRITERIA_JUSTIFICATION.each do |criterion_justification| %>
  <%= criterion_justification %>: For more information see <https://www.example.org/>
<% end %>
